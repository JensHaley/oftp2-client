/*
4.3.  Start File Phase

4.3.1.  Entity Definition

   The Initiator from the Start Session phase is designated the Speaker
   while the Responder becomes the Listener.  The roles are reversed by
   the Speaker sending a Change Direction command to the Listener.

4.3.2.  Protocol Sequence

   1. Speaker  -- SFID ------------> Listener   Start File
               <------------ SFPA --            Answer YES

   2. Speaker  -- SFID ------------> Listener   Start File
               <------------ SFNA --            Answer NO
                     Go To 1

      Note: The User Monitor should take steps to prevent a loop
            situation occurring.

   2. Speaker  -- CD --------------> Listener   Change Direction
      Listener <------------ EERP -- Speaker    End to End Response
               -- RTR ------------->            Ready to Receive
               <------------ NERP --            Negative End Response
               -- RTR ------------->            Ready to Receive
               <------------ SFID --            Start File

4.3.3.  Restart Facilities

   The Start File command includes a count allowing the restart of an
   interrupted transmission to be negotiated.  If restart facilities are
   not available, the restart count must be set to zero.  The sender
   will start with the lowest record count + 1.

4.3.4.  Broadcast Facilities

   The destination in a Start File command can be specified as follows.

   1.  An explicitly defined destination.

   2.  A group destination that allows an intermediate location to
       broadcast the Virtual File to multiple destinations.

   The Listener will send a negative answer to the Speaker when the
   destination is not known.

4.3.5.  Priority

   The prioritisation of files for transmission is left to the local
   implementation.  To allow some flexibility, a change direction
   mechanism is available in the End File phase.

4.3.6.  End to End Response (EERP)

   The End to End Response (EERP) command notifies the originator of a
   Virtual File that the Virtual File has been successfully delivered to
   its final destination.  This allows the originator to perform house
   keeping tasks such as deleting copies of the delivered data.

   If the originator of the Virtual File requested a signed EERP in the
   SFID, the EERP must be signed.  Signing allows the originator of the
   file to prove that the EERP was generated by the final destination.
   If the final destination is unable to sign the EERP, it may send back
   an unsigned EERP.  It is an implementation issue to allow the
   acceptance of an unsigned EERP if a signed EERP is requested.

   A Response Command must be sent from the location performing the
   final processing or distribution of the data to the originator.  The
   Response is mandatory and may be sent in the same or in any
   subsequent session.

   When an intermediate location broadcasts or distributes a Virtual
   File, it must receive a Response command from all the locations to
   which it forwarded the data before sending its own Response.  This
   ensures that the Response received by the Virtual File's originator
   accounts for all the destination locations.  An intermediate location
   therefore needs to track the status of files it processes over time.

   The requesting of a signed EERP is incompatible with the use of
   broadcast facilities because an EERP can be signed by only one
   destination.  If this scenario occurs, the intermediate broadcast
   location may continue and ignore the request for a signed EERP or
   send back a NERP.

   Example: Point to Point

      Location A sends file Ba to location B, which will send an EERP to
      location A after it successfully receives the file.

         o----------o                          o-----------o
         | Loc. A   |----------- S1 ---------->| Loc. B    |
         |          |                          |           |
         | [Ba]     |<---------- R2 -----------| [Ba]      |
         +----------o                          o-----------o

                     Key:   S - File Transfer
                            R - Response EERP
                         [Ba] - File for B from A

   Example: Data distribution

      Location A sends a Virtual File containing data for distribution
      to locations B and C via clearing centres E1 and E2.  Clearing
      centre E1 must wait for a response from E2 (for file Ba) and
      location C before it sends its response, R8, to location A.
      Clearing centre E2 can only send response R7 to E1 when location B
      acknowledges file Ba with response R6.

   o---------o        o---------o        o---------o        o---------o
   | Loc. A  |-- S1 ->| Loc. E1 |-- S2 ->| Loc. E2 |-- S5 ->| Loc. B  |
   |         |        |         |        |         |        |         |
   | [Ba,Ca] |<- R8 --| [Ba,Ca] |<- R7 --| [Ba]    |<- R6 --| [Ba]    |
   o---------o        o---------o        o---------o        o---------o
                         A   |
                         |   |           o---------o
                         |   +----- S3 ->| Loc. C  |
                         |               |         |
                         +--------- R4 --| [Ca]    |
                                         o---------o

   Example: Data collection

      Locations A and B send files Ca and Cb to clearing centre E1,
      which forwards both files to location C in a single Virtual File.
      When it receives response R4 from C, clearing centre E1 sends
      response R5 to location A and R6 to location B.

         o---------o        o---------o        o---------o
         | Loc. A  |-- S1 ->| Loc. E1 |-- S3 ->| Loc. C  |
         |         |        |         |        |         |
         | [Ca]    |<- R5 --| [Ca,Cb] |<- R4 --| [Ca,Cb] |
         o---------o        o---------o        o---------o
                               A   |
         o---------o           |   |
         | Loc. B  |-- S2 -----+   |
         |         |               |
         | [Cb]    |<- R6 ---------+
         o---------o

4.3.7.  Negative End Response (NERP)

   In addition to the EERP, which allows control over successful
   transmission of a file, a Negative End Response signals that a file
   could not be delivered to the final destination or that the final
   destination could not process the received file.

   It may be created by an intermediate node that could not transmit the
   file any further because the next node refuses to accept the file.
   The cause of the refusal has to be non-temporary, otherwise the
   intermediate node has to try the transmission again.

   It may also be created by the final node that is unable to process
   the file because of non-recoverable syntax or semantic errors in the
   file, or because of the failure of any other processing performed on
   the file.

   The NERP will be sent back to the originator of the file.

   The parameters are equal to the ones of the EERP, but with additional
   information about the creator of the NERP and the abort reason.
   Where the NERP is created due to a failure to transmit, the abort
   reason is taken from the refusal reason that was sent by the node
   refusing the file.  Because of the NERP, it is possible for the
   intermediate node to stop trying to send the non-deliverable file and
   to delete the file.

   The NERP allows the originator of the file to react to the
   unsuccessful transmission or processing, depending on the reason code
   and the creator of the NERP.

   If the originator of the Virtual File requested a signed EERP in the
   SFID, the NERP must be signed.  Signing allows the originator of the
   file to prove by whom the NERP was generated.  If the location

   generating the NERP is unable to sign the NERP, it may send back an
   unsigned NERP.  It is an implementation issue to allow the acceptance
   of an unsigned EERP if a signed NERP is requested.

4.3.8.  Ready To Receive Command (RTR)

   In order to avoid congestion between two adjacent nodes caused by a
   continuous flow of EERPs and NERPs, a Ready To Receive (RTR) command
   is provided.  The RTR acts as an EERP/NERP acknowledgement for flow
   control but has no end-to-end significance.

      Speaker  -- EERP ------------> Listener   End to End Response
               <------------- RTR --            Ready to Receive
               -- EERP ------------>            End to End Response
               <------------- RTR --            Ready to Receive
               -- NERP ------------>            Negative End Response
               <------------- RTR --            Ready to Receive
               -- SFID ------------>            Start File
                         or
               -- CD -------------->            Exchange the turn

   After sending an EERP or NERP, the Speaker must wait for an RTR
   before sending any other commands.  The only acceptable commands to
   follow are:

        EERP
        NERP
        SFID or CD (if there are no more EERPs or NERPs to be sent)
*/
package startfile
